# This is a basic workflow to help you get started with Actions

name: CI

env:
  PROJECT_NAME: kv-test
  OUTPUT_PATH: deploy
  TARGET_RESOURCE_GROUP: pengyuli-rg
  OVERRIDE_PARAMETERS: Inputs_ehinput_DataSource_SharedAccessPolicyKey=${{ secrets.PENGYUEH_KEY }} Outputs_ehoutput_DataSource_SharedAccessPolicyKey=${{ secrets.PENGYUEH_KEY }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-project:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install --global azure-streamanalytics-cicd
      
      - name: Build the project to generate ARM template file
        shell: pwsh
        run: azure-streamanalytics-cicd build --v2 --project ${{ env.PROJECT_NAME }}/asaproj.json --outputPath ${{ env.OUTPUT_PATH }}
      
      - name: Upload ARM template file as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: ${{ env.OUTPUT_PATH }}
  
  deploy-project:
    runs-on: windows-latest
    needs: [build-project]
    
    steps:
      - name: Download ARM template file from artifacts
        uses: actions/download-artifact@v3
        with:
          name: deploy
          path: ${{ env.OUTPUT_PATH }}

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.TARGET_RESOURCE_GROUP }}
          template: ${{ env.OUTPUT_PATH }}/${{ env.PROJECT_NAME }}.JobTemplate.json
          parameters: ${{ env.OUTPUT_PATH }}/${{ env.PROJECT_NAME }}.JobTemplate.parameters.json ${{ env.OVERRIDE_PARAMETERS }}
          deploymentName: asa-job-deployment
  
